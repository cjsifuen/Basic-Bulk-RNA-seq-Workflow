knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(gprofiler2)
library(pathview)
library(writexl)
#set path to directory containing files
diffex_dir <- '/Volumes/easystore/denver_cjs/RNA-seq/developmentalTimeCourse/re-analysis/diffex/gene_lists/condition'
diffex_files <- fs::dir_ls(diffex_dir, regexp = "\\.txt$")
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gProfilerInput",x,value=FALSE))) == 0]
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gseaInput",x,value=FALSE))) == 0]
diffex_files
#set path to directory containing files
diffex_dir <- '/Volumes/easystore/denver_cjs/RNA-seq/developmentalTimeCourse/re-analysis/diffex/gene_lists/condition'
diffex_files <- fs::dir_ls(diffex_dir, regexp = "\\.txt$")
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gProfilerInput",x,value=FALSE))) == 0]
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gseaInput",x,value=FALSE))) == 0]
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("pathViewInput",x,value=FALSE))) == 0]
diffex_files
library(pathview)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(gprofiler2)
library(pathview)
library(writexl)
#set path to directory containing files
diffex_dir <- '/Volumes/easystore/denver_cjs/RNA-seq/developmentalTimeCourse/re-analysis/diffex/gene_lists/condition'
diffex_files <- fs::dir_ls(diffex_dir, regexp = "\\.txt$")
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gProfilerInput",x,value=FALSE))) == 0]
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("gseaInput",x,value=FALSE))) == 0]
diffex_files <- diffex_files[lapply(diffex_files,function(x) length(grep("pathViewInput",x,value=FALSE))) == 0]
diffex_files
#reading in all to a single tibble
diffex_data <- diffex_files %>%
map_dfr(read_tsv)
#split id column on '_' into ensembl and id column, split only once
#split id column on ' [' to drop the "provisional id"
diffex_data_splitID <- diffex_data %>% separate(id, c("ensembl", "id"), "_", extra = "merge")
diffex_data_splitID <- diffex_data_splitID %>% separate(id, c("id", NA), " \\[", extra = "merge")
diffex_data_splitID$Comparison <- paste0(diffex_data_splitID$Condition,' vs ',diffex_data_splitID$Control)
# group by comparison
diffex_data_splitID_byComparison <- diffex_data_splitID %>%
group_by(Comparison) %>%
group_split() %>%
set_names(unique(diffex_data_splitID$Comparison))
#write to excel
write_xlsx(x = diffex_data_splitID_byComparison,
path = paste0(diffex_dir,'/','differentialExpData.xlsx'),
col_names = TRUE,
format_headers = TRUE)
#subset all rows where a gene is differentially expressed, up, and down
diffex_YES <- diffex_data_splitID %>%
filter(Call == 'YES') %>%
group_by(Comparison) %>%
tally()
diffex_YES_up <- diffex_data_splitID %>%
filter(Call == 'YES', log2FoldChange > 0) %>%
group_by(Comparison) %>%
tally()
diffex_YES_down <- diffex_data_splitID %>%
filter(Call == 'YES', log2FoldChange < 0) %>%
group_by(Comparison) %>%
tally()
diffex_YES$Up <- diffex_YES_up$n
diffex_YES$Down <- diffex_YES_down$n
colnames(diffex_YES) <- c('Comparison','Changed','Up','Down')
diffex_YES <- pivot_longer(data = diffex_YES,
c('Up','Down'),
names_to = 'Direction',
values_to = 'Number')
ggplot(diffex_YES, aes(fill=Direction, y=Number, x=Comparison)) +
geom_bar(stat="identity") +
geom_text(aes(label=Number), size = 5, position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = 'Pastel1') +
theme_classic()
#subset all rows where a gene is differentially expressed, up, and down
diffex_YES_data <- diffex_data_splitID %>%
filter(Call == 'YES') %>%
group_by(Comparison) %>%
group_split() %>%
set_names(unique(diffex_data_splitID$Comparison))
diffex_YES_data <- lapply(diffex_YES_data, function(df){arrange(df,padj)})
diffex_YES_up_data <- diffex_data_splitID %>%
filter(Call == 'YES', log2FoldChange > 0) %>%
group_by(Comparison) %>%
group_split() %>%
set_names(unique(diffex_data_splitID$Comparison))
diffex_YES_up_data <- lapply(diffex_YES_up_data, function(df){arrange(df,desc(log2FoldChange))})
diffex_YES_down_data <- diffex_data_splitID %>%
filter(Call == 'YES', log2FoldChange < 0) %>%
group_by(Comparison) %>%
group_split() %>%
set_names(unique(diffex_data_splitID$Comparison))
diffex_YES_down_data <- lapply(diffex_YES_down_data, function(df){arrange(df,log2FoldChange)})
write_xlsx(x = diffex_YES_data,
path = paste0(diffex_dir,'/','differentialExpDataYes.xlsx'),
col_names = TRUE,
format_headers = TRUE)
write_xlsx(x = diffex_YES_up_data,
path = paste0(diffex_dir,'/','differentialExpDataYesUp.xlsx'),
col_names = TRUE,
format_headers = TRUE)
write_xlsx(x = diffex_YES_down_data,
path = paste0(diffex_dir,'/','differentialExpDataYesDown.xlsx'),
col_names = TRUE,
format_headers = TRUE)
# read in counts file
counts_file <- '/Volumes/easystore/denver_cjs/RNA-seq/developmentalTimeCourse/re-analysis/diffex/counts/raw_counts.txt'
raw_counts <- read_tsv(file = counts_file, col_names = TRUE, trim_ws = TRUE)
raw_counts_splitID <- raw_counts %>% separate(id, c("ensembl", NA), "_", extra = "merge")
raw_counts_splitID <- raw_counts_splitID %>% separate(ensembl, c("ensembl", NA), " \\[", extra = "merge")
#write out for usage
write_tsv(x = raw_counts_splitID, file = paste0(dirname(counts_file), '/clustInput.txt'))
#for clusters
cluster_dir <- '/Volumes/easystore/denver_cjs/RNA-seq/developmentalTimeCourse/re-analysis/cluster'
clusters <- read_tsv(file = paste0(cluster_dir,'/Clusters_Objects.tsv'),
col_names = c('Cluster 0', 'Cluster 1', 'Cluster 2', 'Cluster 3', 'Cluster 4'),
trim_ws = TRUE,
skip = 2)
#write out individual files
for (i in colnames(clusters)){
header_string <- paste0('>',i)
gset <- clusters[[i]]
gset_clean <- na.omit(gset)
cat(header_string, gset_clean, file=paste0(cluster_dir,'/','gProfilerInput_',i,'.txt'),sep="\n")
}
# function to automate the creation of the gprofiler diffex input files
create_gprofiler_input <- function(top, bottom, upset, downset) {
up_string <- paste0('>Upregulated ', top, ' vs ', bottom)
down_string <- paste0('>Downregulated ', top, ' vs ', bottom)
comparison_string <- paste0(top,'vs',bottom)
cat(up_string, file=paste0(diffex_dir,'/','gProfilerInput_',comparison_string,'.txt'),sep="\n")
cat(upset,file=paste0(diffex_dir,'/','gProfilerInput_',comparison_string,'.txt'),append=TRUE,sep="\n")
cat(down_string, file=paste0(diffex_dir,'/','gProfilerInput_',comparison_string,'.txt'),append=TRUE,sep="\n")
cat(downset,file=paste0(diffex_dir,'/','gProfilerInput_',comparison_string,'.txt'),append=TRUE,sep="\n")
}
#NF56vsNF50
create_gprofiler_input(top = 'NF56', bottom = 'NF50',
upset = diffex_YES_up_data$`NF56 vs NF50`$ensembl,
downset = diffex_YES_down_data$`NF56 vs NF50`$ensembl)
#NF62vsNF50
create_gprofiler_input(top = 'NF62', bottom = 'NF50',
upset = diffex_YES_up_data$`NF62 vs NF50`$ensembl,
downset = diffex_YES_down_data$`NF62 vs NF50`$ensembl)
#NF62vsNF56
create_gprofiler_input(top = 'NF62', bottom = 'NF56',
upset = diffex_YES_up_data$`NF62 vs NF56`$ensembl,
downset = diffex_YES_down_data$`NF62 vs NF56`$ensembl)
#NF66vsNF50
create_gprofiler_input(top = 'NF66', bottom = 'NF50',
upset = diffex_YES_up_data$`NF66 vs NF50`$ensembl,
downset = diffex_YES_down_data$`NF66 vs NF50`$ensembl)
#NF66vsNF56
create_gprofiler_input(top = 'NF66', bottom = 'NF56',
upset = diffex_YES_up_data$`NF66 vs NF56`$ensembl,
downset = diffex_YES_down_data$`NF66 vs NF56`$ensembl)
#NF66vsNF62
create_gprofiler_input(top = 'NF66', bottom = 'NF62',
upset = diffex_YES_up_data$`NF66 vs NF62`$ensembl,
downset = diffex_YES_down_data$`NF66 vs NF62`$ensembl)
#convert files use entrez gene ids for pathview and write to individual files
for (i in diffex_YES_data){
file_name <- paste0('pathViewInput_',unique(i$Condition),'_vs_',unique(i$Control),'.txt')
entrez <- gconvert(query = i$ensembl, organism = 'xtropicalis', target = 'ENTREZGENE_ACC', numeric_ns = '', filter_na = FALSE, mthreshold = 1)
i$entrez_gene <- entrez$target
df <- i %>% select(entrez_gene, log2FoldChange)
write_tsv(x = df, file = paste0(diffex_dir,'/',file_name), col_names = TRUE)
pathview(gene.data = df$log2FoldChange)
}
#convert files use entrez gene ids for pathview and write to individual files
for (i in diffex_YES_data){
file_name <- paste0('pathViewInput_',unique(i$Condition),'_vs_',unique(i$Control),'.txt')
entrez <- gconvert(query = i$ensembl, organism = 'xtropicalis', target = 'ENTREZGENE_ACC', numeric_ns = '', filter_na = FALSE, mthreshold = 1)
i$entrez_gene <- entrez$target
df <- i %>% select(entrez_gene, log2FoldChange)
write_tsv(x = df, file = paste0(diffex_dir,'/',file_name), col_names = TRUE)
}
View(df)
df2 <- na.omit(df)
View(df)
df2 <- nan.omit(df)
df2 <- drop_na(df)
View(df2)
df2 <- drop_na(data = df)
df2 <- df %>% filter(entrez_gene == 'nan')
View(df2)
df2 <- df %>% filter(entrez_gene !== 'nan')
df2 <- df %>% filter(entrez_gene != 'nan')
df2 <- df %>% filter(entrez_gene != 'nan')
x <- df2$log2FoldChange
names(x) <- df2$entrez_gene
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr')
#convert files use entrez gene ids for pathview and write to individual files
for (i in diffex_YES_data){
file_name <- paste0('pathViewInput_',unique(i$Condition),'_vs_',unique(i$Control),'.txt')
entrez <- gconvert(query = i$ensembl, organism = 'xtropicalis', target = 'ENTREZGENE_ACC', numeric_ns = '', filter_na = FALSE, mthreshold = 1)
i$entrez_gene <- entrez$target
df <- i %>% select(entrez_gene, log2FoldChange)
df2 <- df %>% filter(entrez_gene != 'nan')
x <- df2$log2FoldChange
names(x) <- df2$entrez_gene
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control)))
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control), '_nonnative'))
write_tsv(x = df, file = paste0(diffex_dir,'/',file_name), col_names = TRUE)
}
#convert files use entrez gene ids for pathview and write to individual files
for (i in diffex_YES_data){
file_name <- paste0('pathViewInput_',unique(i$Condition),'_vs_',unique(i$Control),'.txt')
entrez <- gconvert(query = i$ensembl, organism = 'xtropicalis', target = 'ENTREZGENE_ACC', numeric_ns = '', filter_na = FALSE, mthreshold = 1)
i$entrez_gene <- entrez$target
df <- i %>% select(entrez_gene, log2FoldChange)
df2 <- df %>% filter(entrez_gene != 'nan')
x <- df2$log2FoldChange
names(x) <- df2$entrez_gene
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control)))
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  kegg.native = FALSE, out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control), '_nonnative'))
write_tsv(x = df, file = paste0(diffex_dir,'/',file_name), col_names = TRUE)
}
#convert files use entrez gene ids for pathview and write to individual files
for (i in diffex_YES_data){
file_name <- paste0('pathViewInput_',unique(i$Condition),'_vs_',unique(i$Control),'.txt')
entrez <- gconvert(query = i$ensembl, organism = 'xtropicalis', target = 'ENTREZGENE_ACC', numeric_ns = '', filter_na = FALSE, mthreshold = 1)
i$entrez_gene <- entrez$target
df <- i %>% select(entrez_gene, log2FoldChange)
df2 <- df %>% filter(entrez_gene != 'nan')
x <- df2$log2FoldChange
names(x) <- df2$entrez_gene
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control)))
pathview(gene.data = x, pathway.id = 'xtr04110', species = 'xtr',  kegg.native = FALSE, out.suffix = paste0(unique(i$Condition), 'vs',unique(i$Control), '_nonnative'), same.layer = FALSE)
write_tsv(x = df, file = paste0(diffex_dir,'/',file_name), col_names = TRUE)
}
pathview(gene.data = x, species = 'xtr',  out.suffix = 'test')
